name: Deploy Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install gunicorn

      - name: Create env file
        run: |
          echo "WOOCOMMERCE_URL=${{ secrets.WOOCOMMERCE_URL }}" > .env
          echo "WOOCOMMERCE_CONSUMER_KEY=${{ secrets.WOOCOMMERCE_CONSUMER_KEY }}" >> .env
          echo "WOOCOMMERCE_CONSUMER_SECRET=${{ secrets.WOOCOMMERCE_CONSUMER_SECRET }}" >> .env

      - name: Create required directories
        run: |
          mkdir -p product_images uploads
          touch product_images/.gitkeep uploads/.gitkeep

      - name: Build static files
        run: |
          cp -r templates/* .
          mkdir -p _site
          cp -r templates/* _site/
          cp -r static/* _site/ || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
